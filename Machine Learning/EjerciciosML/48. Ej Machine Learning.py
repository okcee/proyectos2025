''' Clasificaci√≥n Autom√°tica de Frutas - Practicar con algoritmos de clasificaci√≥n

Contexto:
Eres parte de un equipo que desarrolla una app para supermercados inteligentes. Tu tarea es crear un clasificador autom√°tico de frutas basado en dos caracter√≠sticas: peso (en gramos) y tama√±o (en cm). El modelo debe aprender a distinguir entre Manzanas, Pl√°tanos y Naranjas usando datos generados de forma simulada.

Objetivo:
Construir una soluci√≥n modular en Python que:
Genere datos aleatorios simulando las caracter√≠sticas f√≠sicas de frutas.
Entrene un clasificador K-Nearest Neighbors (KNN) con esos datos.
Permita predecir el tipo de fruta dados su peso y tama√±o.
Muestre gr√°ficamente los datos con colores distintos para cada fruta.

üîß Especificaciones t√©cnicas
1. Crear la clase GeneradorFrutas
M√©todo: generar(self, num_muestras)
Debe generar num_muestras pares [peso, tama√±o] y su respectiva etiqueta: "Manzana", "Pl√°tano" o "Naranja".
Rango de valores por tipo:
Manzana: peso entre 120‚Äì200g, tama√±o entre 7‚Äì9cm
Pl√°tano: peso entre 100‚Äì150g, tama√±o entre 12‚Äì20cm
Naranja: peso entre 150‚Äì250g, tama√±o entre 8‚Äì12cm
2. Crear la clase ClasificadorFrutas
Constructor: __init__(self, k=3)
M√©todo: entrenar(self, X, y) para entrenar un modelo KNeighborsClassifier
M√©todo: predecir(self, peso, tama√±o) que devuelva una fruta como string.
3: Crear la clase VisualizadorFrutas
M√©todo: graficar(self, X, y, titulo="Frutas") que grafique un scatter plot (matplotlib), con color distinto por clase.
4: Clase principal AppClasificacionFrutas
M√©todo: ejecutar(self)
Genera 100 muestras con GeneradorFrutas
Entrena el modelo con ClasificadorFrutas
Predice el tipo de fruta para una muestra nueva: peso 140g y tama√±o 18cm
Imprime la predicci√≥n.
Muestra un gr√°fico de las frutas generadas.

‚úÖ Ejemplo de uso
simulador = SimuladorFrutas()
simulador.ejecutar()

Salida esperada
üîç Precisi√≥n del modelo: 90.00%
üçé La fruta predicha para peso=140g y tama√±o=18cm es: Pl√°tano
'''

Resuelve en un script python el ejercicio 48. Ej Machine Learning.py Crea el c√≥digo limpio y con comentarios que sea compatible con el entorno de udemy No es necesario explicaciones, solo el script para copiar